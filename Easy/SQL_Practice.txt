--175.	Combine Two Tables
--(1)	使用OUTER JOIN处理只有人名没地址的情况
SELECT Person.FirstName, Person.LastName, Address.City, Address.State FROM Person
LEFT JOIN Address ON Person.PersonID = Address.PersonID

--176.	Second Highest Salary
--(1)	使用SELECT嵌套，处理没有第二高的工资，输出NULL
--(2)	使用DISTICNT，处理只有两个人有工资，工资还相同，也没有第二高的工资
--(3)	使用OFFSET，从第二位开始数LIMIT
SELECT(
    SELECT DISTINCT Salary FROM Employee
    ORDER BY Salary DESC
    LIMIT 1 OFFSET 1
) AS SecondHighestSalary

--182.	Duplicate Emails
--(1)	使用DISTICT，防止Email多次出现
SELECT DISTINCT Email FROM Person
WHERE Id NOT IN
(SELECT Id FROM (SELECT Id FROM Person GROUP BY Email) AS tmp)
--(2)	有Aggrgate Function的时候，要用GROUP BY指定聚类哪个Column
SELECT Email FROM Person
GROUP BY Email
HAVING COUNT(*) > 1

--620. 	Not Boring Movies
--(1)	注意NOT的用法
SELECT id,movie,description,rating FROM cinema
WHERE description NOT IN ('boring') AND id%2 != 0
--WHERE NOT description = 'boring' AND id%2 != 0
ORDER BY rating DESC

--196. 	Delete Duplicate Emails
--(1)	留下SMALLEST ID，所以要用MIN，外部还想继续用这个结果，所以得做成alias
DELETE FROM Person
WHERE Id NOT IN
(SELECT min_id FROM
    (SELECT MIN(Id) as min_id FROM Person 
     GROUP BY Email) AS tmp)
--(2)	SELF JOIN
DELETE p1 FROM Person p1, Person p2
WHERE p1.Email = p2.Email AND p1.Id > p2.Id

--595. 	Big Countries
--(1) 	也可以使用UNION，但是comments里说慢
SELECT name, population, area FROM World
WHERE area > 3000000 OR population > 25000000

--596. 	Classes More Than 5 Students
--(1) 	要DISTINCT防止重复entry
SELECT class FROM (
    SELECT class, COUNT(DISTINCT student) AS stu_num FROM courses
    GROUP BY class) as tmp
WHERE stu_num >= 5
--(2)	不用sub-quiry，GROUP BY放在HAVING之前
SELECT class FROM courses
GROUP BY class
HAVING COUNT(DISTINCT student) >= 5

--627. 	Swap Salary
--(1)	使用SET
--(2)	使用CASE
UPDATE salary
SET sex = (CASE WHEN sex = 'm' THEN 'f'
ELSE 'm' END)

--181. 	Employees Earning More Than Their Managers
--(1)	虽然看起来是一个表，但是都是两个表并起来的，所以可以分开调用
--(2)	用INNER JOIN，生成只有员工的大表格然后SELECT
SELECT e1.Name AS Employee FROM Employee AS e1
INNER JOIN Employee AS e2 ON e2.ID = e1.ManagerID
WHERE e2.Salary < e1.Salary
--(3)	用两个Employee表格生成巨大大表格，然SELECT
SELECT e1.Name AS Employee FROM Employee AS e1, Employee AS e2
WHERE e1.ManagerID = e2.ID AND e1.Salary > e2.Salary

--197. 	Rising Temperature
--(1)	DATEDIFF
--(2)	注意是要找的是今天比前一天热，所以不能用前一天比今天小来比较，这样会丢失最后一天
SELECT Weather.Id AS Id FROM Weather
INNER JOIN Weather AS w ON Weather.Temperature > w.Temperature AND DATEDIFF(Weather.RecordDate, w.RecordDate) = 1

--183. 	Customers Who Never Order
--(1)	其实直接用WHERE就可以吧，不知道为啥用了INNER JOIN
SELECT Name AS Customers FROM Customers 
WHERE Id NOT IN
(SELECT CustomerID FROM Orders
INNER JOIN Customers ON Orders.CustomerID = Customers.ID)